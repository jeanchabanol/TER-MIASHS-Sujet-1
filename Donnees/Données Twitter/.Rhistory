b0=3
#b1
b1=7
#Epsilon
e=rnorm(n,0,1)
#X
X=rnorm(n,6,1/8)
#Y
Y=b0+b1*X+e;head(Y)
#Régression
modlin=lm(Y~X);summary(modlin)
#Nombre de valeurs
n=10000
#B0
b0=3
#b1
b1=7
#Epsilon
e=rnorm(n,0,1)
#X
X=rnorm(n,6,1/8)
#Y
Y=b0+b1*X+e;head(Y)
#Régression
modlin=lm(Y~X);summary(modlin)
#Nombre de valeurs
n=10000
#B0
b0=3
#b1
b1=7
#Epsilon
e=rnorm(n,0,1)
#X
X=rnorm(n,6,1/8)
#Y
Y=b0+b1*X+e;head(Y)
#Régression
modlin=lm(Y~X);summary(modlin)
#Nombre de valeurs
n=10000
#B0
b0=3
#b1
b1=7
#Epsilon
e=rnorm(n,0,1)
#X
X=rnorm(n,6,1/8)
#Y
Y=b0+b1*X+e;head(Y)
#Régression
modlin=lm(Y~X);summary(modlin)
model.matrix(Y~X)
model.matrix(Y~X)
head(model.matrix(Y~X))
x_moy=lm.mean(x)
x_moy=mean(x)
x_moy=modlin$coefficients[0]+modlin$coefficients[1]
modlin$coefficients[0]
x_moy=modlin$coefficients[[0]]+modlin$coefficients[[1]]*mean(x)
x_moy=modlin$coefficients[[0]]+modlin$coefficients[[1]]*mean(X)
modlin$coefficients[[0]]
str(modlin)
modlin$coefficients[[1]]
x_moy=predict(modlin,newdata=mean(X))
mean(X)
predict(modlin,newdata=mean(X))
modlin$coefficients[[1]]
mean(X)
modlin$coefficients[[0]]
modlin$coefficients[[2]]
x_moy=modlin$coefficients[[1]]+modlin$coefficients[[2]]*mean(X)
x_moy=modlin$coefficients[[1]]+modlin$coefficients[[2]]*mean(X);x_moy
#Nombre de valeurs
n=10000
#B0
b0=3
#b1
b1=7
#Epsilon
e=rnorm(n,0,1)
#X
X=rnorm(n,6,1/8)
#Y
Y=b0+b1*X+e;head(Y)
#Régression
modlin=lm(Y~X);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~X))
#On cherche le point moyen
y_moy=mean(Y);y_moy
x_moy=modlin$coefficients[[1]]+modlin$coefficients[[2]]*mean(X);x_moy
#On refait le modèle linéaire sans l'intercept
modlin_centre=lm(y_centre~x_centre)
y_centre=Y-y_moy
x_centre=X-mean(X)
#On refait le modèle linéaire sans l'intercept
modlin_centre=lm(y_centre~x_centre)
#On refait le modèle linéaire sans l'intercept
modlin_centre=lm(y_centre~x_centre);summary(modlin_centre)
#On refait le modèle linéaire sans l'intercept (le -1)
modlin_centre=lm(y_centre~x_centre-1);summary(modlin_centre)
#On refait le modèle linéaire sans l'intercept (le -1)
modlin_centre=lm(y_centre~x_centre-1);summary(modlin_centre)
library(ggplot2)
#On affiche un graphique avce la courbe
ggplot(aes(x=X,y=Y))+
geom_dotplot()
#On affiche un graphique avce la courbe
ggplot(aes(x=X,y=Y))+
geom_point()
#On cherche le point moyen; On voit que les deux formules sont équivalentes
y_moy=mean(Y);y_moy
library(ggplot2)
#On affiche un graphique avce la courbe
ggplot(aes(x=X,y=Y))+
geom_point()
#On affiche un graphique avce la courbe
ggplot()+
geom_point(aes(x=X,y=Y))
library(ggplot2)
#Nombre de valeurs
n=10000
#B0
b0=3
#b1
b1=7
#Epsilon
e=rnorm(n,0,0.01)
#X
X=rnorm(n,6,1/8)
#Y
Y=b0+b1*X+e;head(Y)
#Régression
modlin=lm(Y~X);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~X))
#On affiche un graphique avce la courbe
ggplot()+
geom_point(aes(x=X,y=Y))
#Nombre de valeurs
n=10000
#B0
b0=3
#b1
b1=7
#Epsilon
e=rnorm(n,0,0.1)
#X
X=rnorm(n,6,1/8)
#Y
Y=b0+b1*X+e;head(Y)
#Régression
modlin=lm(Y~X);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~X))
#On affiche un graphique avce la courbe
ggplot()+
geom_point(aes(x=X,y=Y))
#On affiche un graphique avce la courbe
ggplot()+
geom_point(aes(x=X,y=Y))+
geom_line(aes(x=X,y=modlin$coefficients[[1]]+modlin$coefficients[[2]]*X))
#On affiche un graphique avce la courbe
ggplot()+
geom_point(aes(x=X,y=Y), color="blue")+
geom_line(aes(x=X,y=modlin$coefficients[[1]]+modlin$coefficients[[2]]*X))
#On affiche un graphique avce la courbe
ggplot()+
geom_point(aes(x=X,y=Y), color="blue", size=1)+
geom_line(aes(x=X,y=modlin$coefficients[[1]]+modlin$coefficients[[2]]*X))
#On affiche un graphique avce la courbe
ggplot()+
geom_point(aes(x=X,y=Y), color="blue", size=1)+
geom_line(aes(x=X,y=modlin$coefficients[[1]]+modlin$coefficients[[2]]*X), size=3)
#On affiche un graphique avce la courbe
ggplot()+
geom_point(aes(x=X,y=Y), color="blue", size=1)+
geom_line(aes(x=X,y=modlin$coefficients[[1]]+modlin$coefficients[[2]]*X), size=1.5)
#Covariance
mean(y_centre*x_centre)/mean(x_centre*x_centre)
#Covariance et valeur de B1
mean(y_centre*x_centre)/mean(x_centre*x_centre)
x=repeat(rnom(30,2,5))
x=repeat(rnorm(30,2,5))
?as.matrix
x=as.matrix(repeat(rnorm(30,2,5), ncol=3)
x=as.matrix(repeat(rnorm(30,2,5)), ncol=3)
x
x
x
mat=as.matrix(repeat(rnorm(30,2,5)), ncol=3)
mat=as.matrix(repeat(rnorm(30,2,5)), ncol=3)
mat
mat
mat
mat
mat
mat
mat
mat
mat
as.matrix(repeat(rnorm(30,2,5)), ncol=3)
as.matrix(repeat(rnorm(30,2,5)), ncol=3)
mat=as.matrix(repeat(rnorm(30,2,5)), ncol=3)
mat=as.matrix(repeat(rnorm(30,2,5)), ncol=3)
repeat(rnorm(30,2,5))
repeat(rnorm(30,2,5))
repeat(rnorm(30,2,5))
repeat(rnorm(30,2,5))
repeat(rnorm(30,2,5))
repeat(rnorm(30,2,5))
x0 = rep(1,10)
x1 = c(2,2,0,0,0,1,0,0, 2, 0)
x2 = c(17,20,21,18,31,34,20,17,48,16)
x3 = c(52,56, 27,34,29,38,38,25,53,36)
X = cbind(x0, x1, x2, x3)
y = c(21,26,37,40,35, 37, 35, 26, 42, 38)
X
dim(X)
t(X)
solve(t(X)%*%X)
Ainv=solve(t(X)%*%X)
t(X)%*%y
Ainv%*%t(X)%*%y
beatc = Ainv%*%t(X)%*%y
beatc
yc = X%*%beatc
yc
x0 = rep(1,10)
x1 = c(2,2,0,0,0,1,0,0, 2, 0)
x2 = c(17,20,21,18,31,34,20,17,48,16)
x3 = c(52,56, 27,34,29,38,38,25,53,36)
X = cbind(x0, x1, x2, x3)
y = c(21,26,37,40,35, 37, 35, 26, 42, 38)
X
dim(X)
t(X)
solve(t(X)%*%X)
Ainv=solve(t(X)%*%X)
t(X)%*%y
Ainv%*%t(X)%*%y
beatc = Ainv%*%t(X)%*%y
beatc
yc = X%*%beatc
yc
#Nombre de valeurs
n=10000
#Facteur
X=sample(c("pluie","sec","brume"), n,replace = T)
#Epsilon
e=rnorm(n,0,0.1)
#B0
b0=3
#b2
b2=7
#B3
b3=5
#Y=β0+βX+ε
Y=b0+b2*(X=="sec")+b3*(X=="brume")+e
Y
#Régression
modlin=lm(Y~X);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~X))
model.matrix(Y~X)
#Nombre de valeurs
n=10000
#Facteur
X=sample(c("pluie","sec","brume"), n,replace = T)
Xtri=sort(X)
#Epsilon
e=rnorm(n,0,0.1)
#B0
b0=3
#b2
b2=7
#B3
b3=5
#Y=β0+βX+ε
Y=b0+b2*(Xtri=="sec")+b3*(Xtri=="brume")+e;head(Y)
#Régression
modlin=lm(Y~Xtri);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~Xtri))
model.matrix(Y~Xtri)
Xtri
#Nombre de valeurs
n=100
#Facteur
X=sample(c("pluie","sec","brume"), n,replace = T)
Xtri=sort(X)
#Epsilon
e=rnorm(n,0,0.1)
#B0
b0=3
#b2
b2=7
#B3
b3=5
#Y=β0+βX+ε
Y=b0+b2*(Xtri=="sec")+b3*(Xtri=="brume")+e;head(Y)
#Régression
modlin=lm(Y~Xtri);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~Xtri))
model.matrix(Y~Xtri)
#On cherche le point moyen; On voit que les deux formules sont équivalentes
y_moy=mean(Y);y_moy
summary(modlin)
y_moy_sec=mean(Y[X=="sec"]);y_moy_sec
y_moy_sec=mean(Y[X=="sec"])-y_moy_sec=mean(Y[X=="pluie"]);y_moy_sec
y_moy_sec=mean(Y[X=="sec"])-y_moy_sec=mean(Y[X=="pluie"]);y_moy_sec
#On cherche le point moyen; On voit que les deux formules sont équivalentes
y_moy=mean(Y);y_moy
y_moy_sec=mean(Y[X=="sec"])
y_moy_sec=mean(Y[X=="sec"])
y_moy_sec=mean(Y[X=="sec"])
y_moy_sec=mean(Y[X=="sec"])
y_moy_sec=mean(Y[X=="sec"])
y_moy_sec=mean(Y[X=="sec"])
y_moy_sec=mean(Y[X=="sec"])
y_moy_sec-y_moy_pluie
y_moy=mean(Y);y_moy
y_moy_sec=mean(Y[X=="sec"]);y_moy_sec
y_moy_pluie=mean(Y[X=="pluie"]);y_moy_pluie
y_moy_sec-y_moy_pluie
y_moy=mean(Y);y_moy
y_moy_sec=mean(Y[X=="sec"]);y_moy_sec
y_moy_pluie=mean(Y[X=="pluie"]);y_moy_pluie
y_moy_sec-y_moy_pluie #Censé être égal à β2
n=10000
#Facteur
X=sample(c("pluie","sec","brume"), n,replace = T)
Xtri=sort(X)
#Epsilon
e=rnorm(n,0,0.1)
#B0
b0=3
#b2
b2=7
#B3
b3=5
#Y=β0+βX+ε
Y=b0+b2*(Xtri=="sec")+b3*(Xtri=="brume")+e;head(Y)
#Régression
modlin=lm(Y~Xtri);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~Xtri))
#Moyenne par niveau et moyenne G
y_moy=mean(Y);y_moy
y_moy_sec=mean(Y[X=="sec"]);y_moy_sec
y_moy_pluie=mean(Y[X=="pluie"]);y_moy_pluie
y_moy_sec-y_moy_pluie #Censé être égal à β2
#Nombre de valeurs
n=1000000
#Facteur
X=sample(c("pluie","sec","brume"), n,replace = T)
Xtri=sort(X)
#Epsilon
e=rnorm(n,0,0.1)
#B0
b0=3
#b2
b2=7
#B3
b3=5
#Y=β0+βX+ε
Y=b0+b2*(Xtri=="sec")+b3*(Xtri=="brume")+e;head(Y)
#Régression
modlin=lm(Y~Xtri);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~Xtri))
#Moyenne par niveau et moyenne G
y_moy=mean(Y);y_moy
y_moy_sec=mean(Y[X=="sec"]);y_moy_sec
y_moy_pluie=mean(Y[X=="pluie"]);y_moy_pluie
y_moy_sec-y_moy_pluie #Censé être égal à β2
###On fait pareil mais en changeant le niveau de référence
Xrel=relevel(Xtri, "sec")
str(Xtri)
###On fait pareil mais en changeant le niveau de référence
Xrel=relevel(X, "sec")
Xtri=as.factor(Xtri)
###On fait pareil mais en changeant le niveau de référence
Xrel=relevel(Xtri, "sec")
#Facteur
X=as.factor(sample(c("pluie","sec","brume"), n,replace = T))
Xtri=sort(X)
#Epsilon
e=rnorm(n,0,0.1)
#B0
b0=3
#b2
b2=7
#B3
b3=5
#Y=β0+βX+ε
Y=b0+b2*(Xtri=="sec")+b3*(Xtri=="brume")+e;head(Y)
#Régression
modlin=lm(Y~Xtri);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~Xtri))
#Moyenne par niveau et moyenne G
y_moy=mean(Y);y_moy
y_moy_sec=mean(Y[X=="sec"]);y_moy_sec
y_moy_pluie=mean(Y[X=="pluie"]);y_moy_pluie
y_moy_sec-y_moy_pluie #Censé être égal à β2
###On fait pareil mais en changeant le niveau de référence
Xrel=relevel(Xtri, "sec")
#Régression
modlin=lm(Y~Xrel);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~Xrel))
modlin=lm(Y~Xtri);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~Xtri))
#Moyenne par niveau et moyenne G
y_moy=mean(Y);y_moy
y_moy_sec=mean(Y[X=="sec"]);y_moy_sec
y_moy_pluie=mean(Y[X=="pluie"]);y_moy_pluie
y_moy_sec-y_moy_pluie #Censé être égal à β2
X
#Nombre de valeurs
n=1000000
#Facteur
X=as.factor(sample(c("1pluie","2sec","3brume"), n,replace = T))
Xtri=sort(X)
#Epsilon
e=rnorm(n,0,0.1)
#B0
b0=3
#b2
b2=7
#B3
b3=5
#Y=β0+βX+ε
Y=b0+b2*(Xtri=="2sec")+b3*(Xtri=="3brume")+e;head(Y)
#Régression
modlin=lm(Y~Xtri);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~Xtri))
#Moyenne par niveau et moyenne G
y_moy=mean(Y);y_moy
y_moy_sec=mean(Y[X=="2sec"]);y_moy_sec
y_moy_pluie=mean(Y[X=="1pluie"]);y_moy_pluie
y_moy_sec-y_moy_pluie #Censé être égal à β2
sort(c("1pluie","2sec","3brume"))
d=1.5
d2=0.5
d3=2
#Xreg
Xreg=rnorm(n,6,1/8)
#Nouveau Y quimélange facteur et regresseur
#Y=β0+βX+ε
Y=b0+b2*(Xtri=="2sec")+b3*(Xtri=="3brume")
d*Xreg+d2*Xreg*(Xtri=="2sec")+d3*Xreg*(Xtri=="3Brume")+e;head(Y)
#Régression
modlin=lm(Y~Xtri*Xreg);summary(modlin)
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~Xrel))
#Matrice X de l'équation Y=βX+ε
head(model.matrix(Y~Xtri*Xreg))
setwd("C:/Users/celia/Documents/MIASHS/M1/TER/Donnees/Données Twitter/")
# liste des csv à importer :
liste_json <- list.files(recursive = TRUE,"Données travaillées", pattern = ".json", full.names = TRUE)
d=as.data.frame((lapply(liste_json,fromJSON, dataframe='rows')))
library(jsonlite)
library(data.table)
library(stringr)
library(jsonlite)
library(data.table)
library(stringr)
setwd("C:/Users/celia/Documents/MIASHS/M1/TER/Donnees/Données Twitter/")
# liste des csv à importer :
liste_json <- list.files(recursive = TRUE,"Données travaillées", pattern = ".json", full.names = TRUE)
d=as.data.frame((lapply(liste_json,fromJSON, dataframe='rows')))
d=as.data.frame((lapply(liste_json,fromJSON)))
# import des données :
dt=as.data.frame(t(lapply(liste_json,fromJSON)))
#Transformation en data.table
setDT(dt)
View(dt)
View(dt)
# import des données :
dt=as.data.frame(t(Sapply(liste_json,fromJSON)))
# import des données :
dt=as.data.frame(t(sapply(liste_json,fromJSON)))
#Transformation en data.table
setDT(dt)
# import des données :
dt=as.data.frame((sapply(liste_json,fromJSON)))
liste_json
setwd("C:/Users/celia/Documents/MIASHS/M1/terbis/reddit/données/")
# liste des csv à importer :
liste_json <- list.files(recursive = TRUE,"Suicide", pattern = ".json", full.names = TRUE)
liste_json
# liste des csv à importer :
liste_json3 <- list.files(recursive = TRUE,"Données travaillées", pattern = ".json", full.names = TRUE)
View(liste_json)
View(list_json3)
View(liste_json3)
str(liste_json)
str(liste_json3)
# liste des csv à importer :
liste_json3 <- list.files(recursive = TRUE,"Données travaillées", pattern = ".json", full.names = TRUE)
liste_json3
setwd("C:/Users/celia/Documents/MIASHS/M1/TER/Donnees/Données Twitter/")
# liste des csv à importer :
liste_json3 <- list.files(recursive = TRUE,"Données travaillées", pattern = ".json", full.names = TRUE)
View(liste_json3)
